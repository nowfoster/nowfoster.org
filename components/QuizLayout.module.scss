@import "../styles/vars";
@import "../styles/mixins";
@import "../styles/keyframes";

.closeButton {
  background: none;
  border: none;
  padding: 0.2rem;
  display: flex;
  cursor: pointer;
  border-radius: $border-radius-s;

  path {
    fill: $white;
  }

  &:focus,
  &:active {
    background: $yellow;
    outline: none;

    path {
      fill: black;
    }
  }

  @media screen and (min-width: $breakpoint-m) {
    padding: 0.5rem;
  }
}

.closeIcon {
  width: 25px;
  height: 25px;

  @media screen and (min-width: $breakpoint-m) {
    width: 30px;
    height: 30px;
  }
}

.goBack {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  text-decoration: none;

  svg path {
    stroke: $blue;
  }

  &:hover {
    svg path {
      stroke: $light-blue;
    }
  }

  &:focus,
  &:active {
    svg path {
      stroke: $black;
    }
  }
}

.backdrop {
  height: 100vh;
  background: $black;
  display: flex;
  flex-direction: column;
}

.header {
  color: white;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  @include standard-padding;
  animation: fadeIn 0.5s cubic-bezier(.87, -.41, .19, 1.44);
  line-height: 1.3;

  h1 {
    font-size: 1.3rem;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;

    @media screen and (min-width: $breakpoint-m) {
      font-size: 2rem;
      gap: 1rem;
      flex-direction: row;
      align-items: center;
    }
  }

  span {
    font-size: 0.9rem;
    font-weight: normal;
  }
}

.mount {
  flex: 1;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden; // why does this make whole layout work???

  @media screen and (min-width: $breakpoint-m) {
    @include standard-padding;
    @include section-padding-s;
  }

}

.dialog {
  background: white;
  max-width: 900px;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  animation: fadeIn 1s cubic-bezier(.87, -.41, .19, 1.44);
  overflow: hidden;
  position: relative;


  @media screen and (min-width: $breakpoint-m) {
    border-radius: $border-radius-s;
  }
}

.meter {
  position: absolute;
  top: 0;
  display: block;
  background: transparentize($black, 0.8);
  width: 100%;
  height: 0.5rem;
  transition: 0.2s ease-in-out;
  z-index: 2;

  &::-moz-meter-bar,
  &::-webkit-meter-bar {
    appearance: none;
    background-color: $orange;
    background: linear-gradient(to right, $orange, $dark-orange);
    transform-origin: left;
    animation: growHorizontally 1s ease-in-out;
    animation-delay: 0.3s;
    animation-fill-mode: forwards;
    transform: scaleX(0);
  }

}

.dialogFooter {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem 2rem;
  box-shadow: 0px 0px 5px transparentize($black, 0.9);

  *:last-child {
    margin-left: auto;
  }
}

// if used, MUST be direct parent of .main + .dialogFooter
.form {
  height: 100%;
  display: flex;
  flex-direction: column;
}


@mixin main {
  flex: 1;
  overflow-y: auto;

  h2 {
    margin-top: 0;
    margin-bottom: 1rem;
    color: $orange;
    font-size: 2rem;
  }
}

// MUST be direct parent of .question and .suggestion, OR .centredQuestion
.main {
  @include main;
  display: grid;

  @media screen and (min-width: $breakpoint-m) {
    grid-template-columns: 50% 50%;

  }
}

.paddedMain {
  @include main;
  padding: 2rem;
}

.suggestion {
  background: $blue;
}

.centredQuestion {
  animation: fadeIn 0.3s cubic-bezier(.87, -.41, .19, 1.44);
  grid-column: 1/3;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  height: 100%;
}